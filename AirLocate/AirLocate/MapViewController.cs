// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Drawing;

using MonoTouch.Foundation;
using MonoTouch.UIKit;
using MonoTouch.CoreImage;
using MonoTouch.CoreGraphics;
using MonoTouch.CoreLocation;

namespace AirLocate
{
	public partial class MapViewController : UIViewController
	{
		CLLocationManager locationManager;
		UIImageView imageView;

		RectangleF[] roomCoords;
		 
		public MapViewController (IntPtr handle) : base (handle)
		{
			locationManager = new CLLocationManager ();
			locationManager.DidRangeBeacons += HandleDidRangeBeacons;

			roomCoords = new RectangleF[3];
			roomCoords [0] = new RectangleF (93, 14, 140, 113); //310
			roomCoords [1] = new RectangleF (93, 127, 140, 108); //311
			roomCoords [2] = new RectangleF (93, 235, 140, 110); //312
		}

		public override void ViewWillAppear (bool animated)
		{
			base.ViewWillAppear (animated);
			imageView = new UIImageView ();
			imageView.Frame = new RectangleF (10,70, 320, 480);
			View.AddSubview (imageView);

			locationManager.StartRangingBeacons (new CLBeaconRegion(Defaults.SupportedProximityUuids[0], "office_beacon"));
		}

		void drawRegion(CLBeacon beacon)
		{
			UIGraphics.BeginImageContext(imageView.Frame.Size);
			using(CGContext g = UIGraphics.GetCurrentContext ()){
				g.SaveState ();
				g.TranslateCTM(0f, 480f);
				g.ScaleCTM(1.0f, -1.0f);
				g.DrawImage (new RectangleF (0,0, 271, 480), UIImage.FromBundle ("3floorplan.jpg").CGImage);
				g.RestoreState ();

				g.SetFillColor(UIColor.FromRGBA(255, 0 , 0, 100).CGColor);
				var path = new CGPath ();
				switch ((int)(beacon.Major)) {
					case 310: 
						path.AddRect(roomCoords[0]);
					    break;
					case 311: 
						path.AddRect(roomCoords[1]);
						break;
					case 312: 
						path.AddRect(roomCoords[2]);
						break;

	             }

				path.CloseSubpath();

				g.AddPath(path);
				g.DrawPath(CGPathDrawingMode.FillStroke);
				imageView.Image = UIGraphics.GetImageFromCurrentImageContext();
			}
			UIGraphics.EndImageContext();
			imageView.SetNeedsDisplay ();
		}

		void HandleDidRangeBeacons (object sender, CLRegionBeaconsRangedEventArgs e)
		{
			drawRegion (e.Beacons [0]);
		}
	}
}
